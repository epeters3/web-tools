{"version":3,"file":"component---src-pages-time-tracker-index-tsx-6219bff058e5965b37c4.js","mappings":"mKAyDA,UAnDyC,KACvC,MAAOA,EAAUC,GAAeC,EAAAA,UAAe,IACxCC,EAAUC,GAAeF,EAAAA,UAAe,IACxCG,EAAMC,GAAWJ,EAAAA,SAAe,GAEvCA,EAAAA,WAAgB,KACd,IAAIK,EAAkD,KAStD,OAPIP,IAAyB,IAAbG,EACdI,EAAWC,aAAY,KACrBF,GAASD,GAASA,EAAO,KAAK,GAC7B,KAEHE,GAAYE,cAAcF,GAErB,KACLA,GAAYE,cAAcF,EAAS,CACpC,GACA,CAACP,EAAUG,IAed,OACED,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,gBACJA,EAAAA,cAAAA,IAAAA,KAAIG,EAAO,KACVL,EACCE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CAAQQ,QAVI,KAClBT,GAAY,GACZK,EAAQ,EAAE,GAQ0B,SAC9BJ,EAAAA,cAAAA,SAAAA,CAAQQ,QAfU,KACxBN,GAAaD,EAAS,GAebA,EAAW,SAAW,UAI3BD,EAAAA,cAAAA,SAAAA,CAAQQ,QAzBM,KAClBT,GAAY,GACZG,GAAY,EAAM,GAuBgB,SAE3B,EAMJ,MAAMO,EAAe,IAAMT,EAAAA,cAAAA,QAAAA,KAAO,e","sources":["webpack://web-tools/./src/pages/time-tracker/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { HeadFC, PageProps } from \"gatsby\";\n\n/**\n * Based on https://www.geeksforgeeks.org/create-a-stop-watch-using-reactjs/\n */\nconst TimeTracker: React.FC<PageProps> = () => {\n  const [isActive, setIsActive] = React.useState(false);\n  const [isPaused, setIsPaused] = React.useState(true);\n  const [time, setTime] = React.useState(0);\n\n  React.useEffect(() => {\n    let interval: ReturnType<typeof setInterval> | null = null;\n\n    if (isActive && isPaused === false) {\n      interval = setInterval(() => {\n        setTime((time) => time + 1000);\n      }, 1000);\n    } else {\n      interval && clearInterval(interval);\n    }\n    return () => {\n      interval && clearInterval(interval);\n    };\n  }, [isActive, isPaused]);\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n\n  const handlePauseResume = () => {\n    setIsPaused(!isPaused);\n  };\n\n  const handleReset = () => {\n    setIsActive(false);\n    setTime(0);\n  };\n  return (\n    <main>\n      <h1>Time Tracker</h1>\n      <p>{time / 1000}</p>\n      {isActive ? (\n        <>\n          <button onClick={handleReset}>Reset</button>\n          <button onClick={handlePauseResume}>\n            {isPaused ? \"Resume\" : \"Pause\"}\n          </button>\n        </>\n      ) : (\n        <button onClick={handleStart}>Start</button>\n      )}\n    </main>\n  );\n};\n\nexport default TimeTracker;\n\nexport const Head: HeadFC = () => <title>Time Tracker</title>;\n"],"names":["isActive","setIsActive","React","isPaused","setIsPaused","time","setTime","interval","setInterval","clearInterval","onClick","Head"],"sourceRoot":""}